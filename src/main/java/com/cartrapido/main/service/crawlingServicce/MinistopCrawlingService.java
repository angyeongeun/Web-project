package com.cartrapido.main.service.crawlingServicce;import com.cartrapido.main.domain.repository.ProductRepository;import com.cartrapido.main.web.dto.ProductDTO;import org.jsoup.Jsoup;import org.jsoup.nodes.Document;import org.jsoup.select.Elements;import org.openqa.selenium.By;import org.openqa.selenium.WebDriver;import org.openqa.selenium.WebElement;import org.openqa.selenium.chrome.ChromeDriver;import org.openqa.selenium.chrome.ChromeOptions;import org.springframework.beans.factory.annotation.Autowired;import org.springframework.stereotype.Service;import javax.annotation.PostConstruct;import java.util.ArrayList;import java.util.List;@Servicepublic class MinistopCrawlingService {    @Autowired    private ProductRepository productRepository;//    private List<ProductDTO> ministopProductList = new ArrayList<ProductDTO>();;//    private int count;    private String store = "ministop";    //WebDriver    private WebDriver driver;    private WebElement element;    //Properties    public static final String WEB_DRIVER_ID = "webdriver.chrome.driver";    public static final String WEB_DRIVER_PATH = "C:/drivers/chromedriver.exe";    //크롤링 할 URL    private String base_url;    //@PostConstruct    public void getGSDatas() {        System.out.println(store);        //System Property SetUp        System.setProperty(WEB_DRIVER_ID, WEB_DRIVER_PATH);        ChromeOptions options = new ChromeOptions();        options.addArguments("headless");        //Driver SetUp        driver = new ChromeDriver(options);        lunchBoxCrawling();        driver = new ChromeDriver(options);        riceballsCrawling();        driver = new ChromeDriver(options);        gimbapCrawling();//        driver = new ChromeDriver(options);//        sandwichCrawling();        driver = new ChromeDriver(options);        hamburgerCrawling();    }    public void lunchBoxCrawling() {        try {            driver.get("https://www.ministop.co.kr/");            String main = driver.getWindowHandle();            //팝업창 닫기            for (String handle : driver.getWindowHandles()) {                if( !handle.equals(main)) {                    driver.switchTo().window(handle).close();                }            }            //메인 url로 변환            driver.switchTo().window(main);            driver.switchTo().frame(driver.findElement(By.cssSelector("frame[scrolling='auto']")));            driver.switchTo().frame(driver.findElement(By.cssSelector("frame[title='frame2nd']")));            driver.findElement(By.id("menu4")).click();            //더보기 클릭            element = driver.findElement(By.className("pr_more"));            element.click();            Thread.sleep(3000);            String html = driver.getPageSource();//            System.out.println(html);            Document doc = Jsoup.parse(html);//            System.out.println(doc);            Elements elements = doc.select("ul.menu_list");//            System.out.println(elements);            int i;            for (i = 0; i < elements.select("li").size(); i++) {                System.out.println(i);                String productName = elements.select("img").get(i).attr("alt");                System.out.println(productName);                String stringProductPrice = elements.select("p strong").get(i).text();                String[] productPriceSplit = stringProductPrice.split(",");                String productPrice = "";                for (String str : productPriceSplit) {                    productPrice = productPrice + str;                }                productPrice = productPrice.replaceAll("원", "");                System.out.println(productPrice);                String image = elements.select("img").get(i).attr("src");                int imageLength = image.length();                String imageId = image.substring(2, imageLength);                String imageMain = "https://www.ministop.co.kr/MiniStopHomePage/page";                image = imageMain + imageId;                System.out.println(image);                ProductDTO productDTO = ProductDTO.builder()                        .itemId("")                        .productName(productName)                        .productPrice(Integer.parseInt(productPrice))                        .productQty(10)                        .store(store)                        .category("LunchBox")                        .image(image)                        .build();                productRepository.save(productDTO.toEntity()).getProductId();                //ministopProductList.add(productDTO);            }        } catch (Exception e) {            e.printStackTrace();        } finally {            driver.close();        }    }    public void riceballsCrawling() {        try {            driver.get("https://www.ministop.co.kr/");            String main = driver.getWindowHandle();            //팝업창 닫기            for (String handle : driver.getWindowHandles()) {                if( !handle.equals(main)) {                    driver.switchTo().window(handle).close();                }            }            //메인 url로 변환            driver.switchTo().window(main);            driver.switchTo().frame(driver.findElement(By.cssSelector("frame[scrolling='auto']")));            driver.switchTo().frame(driver.findElement(By.cssSelector("frame[title='frame2nd']")));            driver.findElement(By.id("menu4")).click();            driver.findElement(By.xpath("//*[@id='section']/div[3]/ul/li[2]/a")).click();            //더보기 클릭            element = driver.findElement(By.className("pr_more"));            element.click();            Thread.sleep(3000);            String html = driver.getPageSource();//            System.out.println(html);            Document doc = Jsoup.parse(html);//            System.out.println(doc);            Elements elements = doc.select("ul.menu_list");//            System.out.println(elements);            int i;            for (i = 0; i < elements.select("li").size(); i++) {                //System.out.println(i);                String productName = elements.select("img").get(i).attr("alt");                //System.out.println(productName);                String stringProductPrice = elements.select("p strong").get(i).text();                String[] productPriceSplit = stringProductPrice.split(",");                String productPrice = "";                for (String str : productPriceSplit) {                    productPrice = productPrice + str;                }                productPrice = productPrice.replaceAll("원", "");                //System.out.println(productPrice);                String image = elements.select("img").get(i).attr("src");                int imageLength = image.length();                String imageId = image.substring(2, imageLength);                String imageMain = "https://www.ministop.co.kr/MiniStopHomePage/page";                image = imageMain + imageId;                //System.out.println(image);                ProductDTO productDTO = ProductDTO.builder()                        .productName(productName)                        .productPrice(Integer.parseInt(productPrice))                        .productQty(10)                        .store(store)                        .category("Riceballs")                        .image(image)                        .build();                productRepository.save(productDTO.toEntity()).getProductId();                //ministopProductList.add(productDTO);            }        } catch (Exception e) {            e.printStackTrace();        } finally {            driver.close();        }    }    public void gimbapCrawling() {        try {            driver.get("https://www.ministop.co.kr/");            String main = driver.getWindowHandle();            //팝업창 닫기            for (String handle : driver.getWindowHandles()) {                if( !handle.equals(main)) {                    driver.switchTo().window(handle).close();                }            }            //메인 url로 변환            driver.switchTo().window(main);            driver.switchTo().frame(driver.findElement(By.cssSelector("frame[scrolling='auto']")));            driver.switchTo().frame(driver.findElement(By.cssSelector("frame[title='frame2nd']")));            driver.findElement(By.id("menu4")).click();            driver.findElement(By.xpath("//*[@id='section']/div[3]/ul/li[3]/a")).click();            //더보기 클릭            element = driver.findElement(By.className("pr_more"));            element.click();            Thread.sleep(3000);            String html = driver.getPageSource();//            System.out.println(html);            Document doc = Jsoup.parse(html);//            System.out.println(doc);            Elements elements = doc.select("ul.menu_list");//            System.out.println(elements);            int i;            for (i = 0; i < elements.select("li").size(); i++) {                //System.out.println(i);                String productName = elements.select("img").get(i).attr("alt");                //System.out.println(productName);                String stringProductPrice = elements.select("p strong").get(i).text();                String[] productPriceSplit = stringProductPrice.split(",");                String productPrice = "";                for (String str : productPriceSplit) {                    productPrice = productPrice + str;                }                productPrice = productPrice.replaceAll("원", "");                //System.out.println(productPrice);                String image = elements.select("img").get(i).attr("src");                int imageLength = image.length();                String imageId = image.substring(2, imageLength);                String imageMain = "https://www.ministop.co.kr/MiniStopHomePage/page";                image = imageMain + imageId;                //System.out.println(image);                ProductDTO productDTO = ProductDTO.builder()                        .productName(productName)                        .productPrice(Integer.parseInt(productPrice))                        .productQty(10)                        .store(store)                        .category("Gimbap")                        .image(image)                        .build();                productRepository.save(productDTO.toEntity()).getProductId();                //ministopProductList.add(productDTO);            }        } catch (Exception e) {            e.printStackTrace();        } finally {            driver.close();        }    }    public void sandwichCrawling() {        try {            driver.get("https://www.ministop.co.kr/");            String main = driver.getWindowHandle();            //팝업창 닫기            for (String handle : driver.getWindowHandles()) {                if( !handle.equals(main)) {                    driver.switchTo().window(handle).close();                }            }            //메인 url로 변환            driver.switchTo().window(main);            driver.switchTo().frame(driver.findElement(By.cssSelector("frame[scrolling='auto']")));            driver.switchTo().frame(driver.findElement(By.cssSelector("frame[title='frame2nd']")));            driver.findElement(By.id("menu4")).click();            driver.findElement(By.xpath("//*[@id='section']/div[3]/ul/li[4]/a")).click();            //더보기 클릭            element = driver.findElement(By.className("pr_more"));            element.click();            Thread.sleep(3000);            String html = driver.getPageSource();//            System.out.println(html);            Document doc = Jsoup.parse(html);//            System.out.println(doc);            Elements elements = doc.select("ul.menu_list");//            System.out.println(elements);            int i;            for (i = 0; i < elements.select("li").size(); i++) {                //System.out.println(i);                String productName = elements.select("img").get(i).attr("alt");                //System.out.println(productName);                String stringProductPrice = elements.select("p strong").get(i).text();                String[] productPriceSplit = stringProductPrice.split(",");                String productPrice = "";                for (String str : productPriceSplit) {                    productPrice = productPrice + str;                }                productPrice = productPrice.replaceAll("원", "");                //System.out.println(productPrice);                String image = elements.select("img").get(i).attr("src");                int imageLength = image.length();                String imageId = image.substring(2, imageLength);                String imageMain = "https://www.ministop.co.kr/MiniStopHomePage/page";                image = imageMain + imageId;                //System.out.println(image);                ProductDTO productDTO = ProductDTO.builder()                        .productName(productName)                        .productPrice(Integer.parseInt(productPrice))                        .productQty(10)                        .store(store)                        .category("Sandwich")                        .image(image)                        .build();                productRepository.save(productDTO.toEntity()).getProductId();                //ministopProductList.add(productDTO);            }        } catch (Exception e) {            e.printStackTrace();        } finally {            driver.close();        }    }    public void hamburgerCrawling() {        try {            driver.get("https://www.ministop.co.kr/");            String main = driver.getWindowHandle();            //팝업창 닫기            for (String handle : driver.getWindowHandles()) {                if( !handle.equals(main)) {                    driver.switchTo().window(handle).close();                }            }            //메인 url로 변환            driver.switchTo().window(main);            driver.switchTo().frame(driver.findElement(By.cssSelector("frame[scrolling='auto']")));            driver.switchTo().frame(driver.findElement(By.cssSelector("frame[title='frame2nd']")));            driver.findElement(By.id("menu4")).click();            driver.findElement(By.xpath("//*[@id='section']/div[3]/ul/li[5]/a")).click();            //더보기 클릭            element = driver.findElement(By.className("pr_more"));            element.click();            Thread.sleep(3000);            String html = driver.getPageSource();//            System.out.println(html);            Document doc = Jsoup.parse(html);//            System.out.println(doc);            Elements elements = doc.select("ul.menu_list");//            System.out.println(elements);            int i;            for (i = 0; i < elements.select("li").size(); i++) {                //System.out.println(i);                String productName = elements.select("img").get(i).attr("alt");                //System.out.println(productName);                String stringProductPrice = elements.select("p strong").get(i).text();                String[] productPriceSplit = stringProductPrice.split(",");                String productPrice = "";                for (String str : productPriceSplit) {                    productPrice = productPrice + str;                }                productPrice = productPrice.replaceAll("원", "");                //System.out.println(productPrice);                String image = elements.select("img").get(i).attr("src");                int imageLength = image.length();                String imageId = image.substring(2, imageLength);                String imageMain = "https://www.ministop.co.kr/MiniStopHomePage/page";                image = imageMain + imageId;                //System.out.println(image);                ProductDTO productDTO = ProductDTO.builder()                        .productName(productName)                        .productPrice(Integer.parseInt(productPrice))                        .productQty(10)                        .store(store)                        .category("Hamburger")                        .image(image)                        .build();                productRepository.save(productDTO.toEntity()).getProductId();                //ministopProductList.add(productDTO);            }        } catch (Exception e) {            e.printStackTrace();        } finally {            driver.close();        }    }}